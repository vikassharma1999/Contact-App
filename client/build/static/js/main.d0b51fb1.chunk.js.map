{"version":3,"sources":["backend.js","components/core/Main.js","components/core/coreapicalls.js","components/core/Create.js","components/core/Update.js","App.js","index.js"],"names":["API","process","Main","useState","contacts","setContacts","error","setError","loadAllContacts","fetch","method","then","response","json","catch","err","console","log","data","useEffect","deleteContact","id","headers","Accept","deleteAContact","Fragment","style","padding","type","to","map","contact","key","_id","justifyContent","size","title","name","extra","email","contactno","danger","onClick","e","Create","formData","setFormData","success","setSuccess","onChange","target","value","onSubmit","contactData","preventDefault","body","JSON","stringify","successMessage","errorMessage","className","placeholder","required","minLength","maxLength","Update","match","preload","Id","params","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0b51fb1.chunk.js","sourcesContent":["const API = process.env.REACT_APP_BACKEND;\nexport default API;\n","import React, { useEffect, useState } from 'react';\nimport { getAllContact, deleteAContact } from './coreapicalls';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { Card } from 'antd';\n\nconst Main = () => {\n  const [contacts, setContacts] = useState([]);\n  const [error, setError] = useState(false);\n  const loadAllContacts = () => {\n    getAllContact().then((data) => {\n      if (data.error) {\n        setError(error);\n      } else {\n        setContacts(data);\n      }\n    });\n  };\n  useEffect(() => {\n    loadAllContacts();\n  }, []);\n  const deleteContact = (id) => {\n    deleteAContact(id).then((data) => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        loadAllContacts();\n      }\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ padding: 10 }}>\n        <Button type='primary'>\n          <Link to='/create'>Add Contact</Link>\n        </Button>\n      </div>\n\n      {contacts.map((contact) => {\n        return (\n          <div\n            key={contact._id}\n            style={{\n              padding: 10,\n              justifyContent: 'center',\n            }}\n          >\n            <Card\n              size='small'\n              title={contact.name}\n              extra={<Link to={`/update/${contact._id}`}>Update</Link>}\n            >\n              <p>Email: {contact.email}</p>\n              <p>Contact No: {contact.contactno}</p>\n              <Button\n                type='primary'\n                danger\n                onClick={(e) => deleteContact(contact._id)}\n              >\n                Delete\n              </Button>\n            </Card>\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n};\nexport default Main;\n","import API from '../../backend';\n\n// method for get all contacts\nexport const getAllContact = () => {\n  return fetch(`${API}/contact`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      // console.log(response.json());\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//method for get a contact\nexport const getAContact = (id) => {\n  return fetch(`${API}/contact/${id}`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n// method to create a contact\nexport const createAContact = (contactData) => {\n  return fetch(`${API}/contact`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(contactData),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n// method to update a contact\nexport const updateAContact = (id, contactData) => {\n  return fetch(`${API}/contact/${id}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(contactData),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n// method to delete a contact\nexport const deleteAContact = (id) => {\n  return fetch(`${API}/contact/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n","import React, { useState } from 'react';\nimport { createAContact } from './coreapicalls';\nimport { Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst Create = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    contactno: '',\n  });\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const { name, email, contactno } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess(false);\n    createAContact(formData)\n      .then((data) => {\n        if (data.error) {\n          setError(true);\n        } else {\n          setFormData({ ...formData, name: '', email: '', contactno: '' });\n          setError(false);\n          setSuccess(true);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  const successMessage = () => {\n    if (success) {\n      return <h4>Contact created successfully</h4>;\n    }\n  };\n  const errorMessage = () => {\n    if (error) {\n      return <h4>Failed to create contact, Please use other Name</h4>;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ padding: 10 }}>\n        <Button type='primary'>\n          <Link to='/'>Back</Link>\n        </Button>\n      </div>\n      <div style={{ padding: 10 }}>\n        {successMessage()}\n        {errorMessage()}\n      </div>\n      <form onSubmit={(e) => onSubmit(e)} className='create-contact-form'>\n        <div className='create-contact-details'>\n          <input\n            type='text'\n            name='name'\n            placeholder='Name'\n            onChange={(e) => onChange(e)}\n            value={name}\n            required\n          />\n          <input\n            type='email'\n            name='email'\n            placeholder='Email'\n            onChange={(e) => onChange(e)}\n            value={email}\n            required\n          />\n          <input\n            type='text'\n            name='contactno'\n            placeholder='Enter 10 digit number here'\n            onChange={(e) => onChange(e)}\n            value={contactno}\n            required\n            minLength='10'\n            maxLength='10'\n          />\n\n          <button>Add Contact</button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default Create;\n","import React, { useState, useEffect } from 'react';\nimport { getAContact, updateAContact } from './coreapicalls';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nconst Update = ({ match }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    contactno: '',\n  });\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const { name, email, contactno } = formData;\n  const preload = (Id) => {\n    getAContact(Id).then((data) => {\n      if (data.error) {\n        setError(true);\n      } else {\n        setFormData(data);\n      }\n    });\n  };\n  useEffect(() => {\n    preload(match.params.id);\n  }, []);\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess(false);\n    updateAContact(match.params.id, formData).then((data) => {\n      if (data.error) {\n        setError(true);\n      } else {\n        setError(false);\n        setSuccess(true);\n        setFormData({ ...formData, name: '', email: '', contactno: '' });\n      }\n    });\n  };\n  const successMessage = () => {\n    if (success) {\n      return <h4>Contact Updated successfully</h4>;\n    }\n  };\n  const errorMessage = () => {\n    if (error) {\n      return <h4> Failed to update contact, Please use other Name</h4>;\n    }\n  };\n  return (\n    <React.Fragment>\n      <div style={{ padding: 10 }}>\n        <Button type='primary'>\n          <Link to='/'>Back</Link>\n        </Button>\n      </div>\n      <div style={{ padding: 10 }}>\n        {successMessage()}\n        {errorMessage()}\n      </div>\n      <form onSubmit={(e) => onSubmit(e)} className='create-contact-form'>\n        <div className='create-contact-details'>\n          <input\n            type='text'\n            name='name'\n            placeholder='Name'\n            onChange={(e) => onChange(e)}\n            value={name}\n            required\n          />\n          <input\n            type='email'\n            name='email'\n            placeholder='Email'\n            onChange={(e) => onChange(e)}\n            value={email}\n            required\n          />\n          <input\n            type='text'\n            name='contactno'\n            placeholder='Enter 10 digit number here'\n            onChange={(e) => onChange(e)}\n            value={contactno}\n            required\n            minLength='10'\n            maxLength='10'\n          />\n\n          <button>Update Contact</button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\nexport default Update;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Main from './components/core/Main';\nimport Create from './components/core/Create';\nimport Update from './components/core/Update';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact component={Main} />\n        <Route path='/create' exact component={Create} />\n        <Route path='/update/:id' exact component={Update} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}